# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fwEwihSJlI5EiZralrUQeY5wOdxE2VH9
"""

import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression


num_samples = int(input("Enter the number of data points: "))
X = []  # Features
y = []  # Target variable (sales)

for i in range(num_samples):
    feature = float(input(f"Enter feature value for data point {i + 1}: "))
    X.append([feature])
    sales = float(input(f"Enter sales for data point {i + 1}: "))
    y.append(sales)


X = np.array(X)
y = np.array(y)


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = LinearRegression()


model.fit(X_train, y_train)


y_pred = model.predict(X_test)


from sklearn.metrics import mean_squared_error, r2_score

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)


new_feature = float(input("Enter the feature value for the new data point: "))
new_data = np.array([[new_feature]])
predicted_sales = model.predict(new_data)
print("Predicted sales:", predicted_sales[0])